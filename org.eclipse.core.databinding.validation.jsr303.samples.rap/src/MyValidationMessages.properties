javax.validation.constraints.AssertFalse.message = must be false
javax.validation.constraints.AssertTrue.message  = must be true
javax.validation.constraints.DecimalMax.message  = must be less than or equal to {value}
javax.validation.constraints.DecimalMin.message  = must be greater than or equal to {value}
javax.validation.constraints.Digits.message      = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
javax.validation.constraints.Future.message      = must be in the future
javax.validation.constraints.Max.message         = must be less than or equal to {value}
javax.validation.constraints.Min.message         = must be greater than or equal to {value}
javax.validation.constraints.NotNull.message     = may not be null
javax.validation.constraints.Null.message        = must be null
javax.validation.constraints.Past.message        = must be in the past
javax.validation.constraints.Pattern.message     = must match following syntax "{regexp}"
javax.validation.constraints.Size.message        = size must be between {min} and {max}

org.hibernate.validator.constraints.CreditCardNumber.message = invalid credit card number
org.hibernate.validator.constraints.Email.message            = not a well-formed email address
org.hibernate.validator.constraints.Length.message           = length must be between {min} and {max}
org.hibernate.validator.constraints.NotBlank.message         = may not be empty
org.hibernate.validator.constraints.NotEmpty.message         = may not be empty
org.hibernate.validator.constraints.Range.message            = must be between {min} and {max}
org.hibernate.validator.constraints.SafeHtml.message         = may have unsafe html content
org.hibernate.validator.constraints.ScriptAssert.message     = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.URL.message              = must be a valid URL


de.atron.constraints.fieldmatch= Fields must match ( {first}, {second} )
de.atron.constraints.phonenumber = not a well-formed phone number
de.atron.constraints.postalcode= not a well-formed postal code
de.atron.constraints.postalcode.fivedigit= not a well-formed postal code (must be five digits)


#At least 1 Alphabet and 1 Number:
de.atron.constraints.password.alphabetnumber=Password must have minimum 6 characters with at least 1 alphabet and 1 number

# 1 Alphabet and 1 Number and 1 special char:
de.atron.constraints.password.alphabetnumberspecial=Password must have minimum 6 characters with a alphabet, a number and a special char(@$!%*#?&).

 # At least 1 Uppercase Alphabet, 1 Lowercase Alphabet and 1 Number:
de.atron.constraints.password.upperlowercasenumber=Password must have minimum 6 characters with a lowercase, uppercase alphabet and a number

# At least 1 Uppercase Alphabet, 1 Lowercase Alphabet, 1 Number and 1 Special Character:
de.atron.constraints.password.upperlowercasenumberspecial=Password must have minimum 6 characters with a lowercase, uppercase alphabet, a number and a special char(@$!%*#?&).


de.atron.constraints.fieldmatch.password= Passwords must match!